package helloworld;

import java.util.LinkedList;

/**
 * Demo java
 * @author riguz
 *
 */
public class HelloWorld {

    public static void main(String[] args){
        // main entry:
        // TODO:
        
        System.out.println("Hello World!");
    }
    
    /**
     * This is about <code>ClassName</code>.
     * {@link com.yourCompany.aPackage.Interface}
     * @author author
     * @deprecated use <code>OtherClass</code>
     */
    public class ClassName<E> extends AnyClass implements InterfaceName<String> {
            enum Color { RED, GREEN, BLUE };
            /* This comment may span multiple lines. */
            static Object staticField;
            // This comment may span only this line
            private E field;
            private AbstractClassName field2;
            // TASK: refactor
            @SuppressWarnings(value="all")
            public int foo(Integer parameter) {
                    abstractMethod(inheritedField);
                    int local= 42*hashCode();
                    staticMethod();
                    return bar(local) + parameter;
            }
    }
    
    /**
     * Here is some text
     * @author riguz
     *
     */
    public class MyIntStack {
        private final LinkedList fStack;

        public MyIntStack() {
            fStack = new LinkedList();
        }

        public int pop() {
            return ((Integer) fStack.removeFirst()).intValue();
        }

        public void push(int elem) {
            fStack.addFirst(new Integer(elem));
        }

        public boolean isEmpty() {
            return fStack.isEmpty();
        }
    }
}
